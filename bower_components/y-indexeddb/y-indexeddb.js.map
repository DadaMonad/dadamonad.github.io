{"version":3,"sources":["../yjs/node_modules/browser-pack/_prelude.js","src/IndexedDB.js","y-indexeddb.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","generateGuid","Math","random","toString","replace","extend","Y","requestModules","then","createStoreClone","Store","Clone","_Store","this","_this","getPrototypeOf","apply","arguments","buffer","_copyTo","_createClass","key","store","regeneratorRuntime","mark","put","v","dontCopy","wrap","_context10","prev","next","push","delegateYield","_get","stop","_delete","id","_context11","flush","_context12","transaction","name","objectStore","find","_context","get","abrupt","sent","_context2","_context3","findWithLowerBound","start","_context4","openCursor","window","IDBKeyRange","lowerBound","findWithUpperBound","end","_context5","upperBound","findNext","_context6","t0","findPrev","_context7","iterate","gen","range","cursorResult","_context8","bound","result","_context9","utils","BufferedStore","createSmallLookupBuffer","ClonedStore","RBTree","Transaction","_Y$Transaction","_this2","db","ss","os","_ds","ds","dsClone","copyTo","OperationStore","_Y$AbstractDatabase","y","options","_this3","namespace","connector","room","idbVersion","requestTransaction","_callee","_context13","indexedDB","open","cleanStart","localStorage","JSON","stringify","_callee2","_context14","clear","whenUserIdSet","userid","_callee4","uid","nextuid","_context16","setUserId","parse","setTimeout","userId","_callee3","_context15","operationAddedNamespace","operationsToAdd","addEventListener","event","newValue","_callee5","_toAdd","op","_context17","parent","every","p","compareIds","operationAdded","noAdd","_context18","makeGen","handleTransactions","request","done","getNextRequest","IDBRequest","onsuccess","res","IDBCursorWithValue","onerror","err","IDBCursor","IDBOpenDBRequest","target","onupgradeneeded","objectStoreNames","contains","deleteObjectStore","createObjectStore","keyPath","destroy","_context19","close","deleteDatabase","AbstractDatabase","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","getter","defineProperties","props","descriptor","defineProperty","protoProps","staticProps"],"mappings":"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","file":"y-indexeddb.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global Y */\n'use strict'\n// Thx to @jed for this script https://gist.github.com/jed/982883\nfunction generateGuid(a){return a?(a^Math.random()*16>>a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,generateGuid)} // eslint-disable-line\n\nfunction extend (Y) {\n  Y.requestModules(['memory']).then(function () {\n    class Store {\n      constructor (transaction, name) {\n        this.store = transaction.objectStore(name)\n      }\n      * find (id) {\n        return yield this.store.get(id)\n      }\n      * put (v) {\n        yield this.store.put(v)\n      }\n      * delete (id) {\n        yield this.store.delete(id)\n      }\n      * findWithLowerBound (start) {\n        return yield this.store.openCursor(window.IDBKeyRange.lowerBound(start))\n      }\n      * findWithUpperBound (end) {\n        return yield this.store.openCursor(window.IDBKeyRange.upperBound(end), 'prev')\n      }\n      * findNext (id) {\n        return yield* this.findWithLowerBound([id[0], id[1] + 1])\n      }\n      * findPrev (id) {\n        return yield* this.findWithUpperBound([id[0], id[1] - 1])\n      }\n      * iterate (t, start, end, gen) {\n        var range = null\n        if (start != null && end != null) {\n          range = window.IDBKeyRange.bound(start, end)\n        } else if (start != null) {\n          range = window.IDBKeyRange.lowerBound(start)\n        } else if (end != null) {\n          range = window.IDBKeyRange.upperBound(end)\n        }\n        var cursorResult\n        if (range != null) {\n          cursorResult = this.store.openCursor(range)\n        } else {\n          cursorResult = this.store.openCursor()\n        }\n        while ((yield cursorResult) != null) {\n          yield* gen.call(t, cursorResult.result.value)\n          cursorResult.result.continue()\n        }\n      }\n      * flush () {}\n    }\n\n    function createStoreClone (Store) {\n      class Clone extends Store {\n        constructor () {\n          super(...arguments)\n          this.buffer = []\n          this._copyTo = null\n        }\n        // copy to this store\n        // it may be neccessary to reset this every time you create a transaction\n        copyTo (store) {\n          this._copyTo = store\n          return this\n        }\n        * put (v, dontCopy) {\n          if (!dontCopy) {\n            this.buffer.push(this._copyTo.put(v))\n          }\n          yield* super.put(v)\n        }\n        * delete (id) {\n          this.buffer.push(this._copyTo.delete(id))\n          yield* super.delete(id)\n        }\n        * flush () {\n          yield* super.flush()\n          for (var i = 0; i < this.buffer.length; i++) {\n            yield* this.buffer[i]\n          }\n          yield* this._copyTo.flush()\n        }\n      }\n      return Clone\n    }\n    Y.utils.createStoreClone = createStoreClone\n\n    var BufferedStore = Y.utils.createSmallLookupBuffer(Store)\n    var ClonedStore = Y.utils.createStoreClone(Y.utils.RBTree)\n\n    class Transaction extends Y.Transaction {\n      constructor (store) {\n        super(store)\n        var transaction = store.db.transaction(['OperationStore', 'StateStore', 'DeleteStore'], 'readwrite')\n        this.store = store\n        this.ss = new BufferedStore(transaction, 'StateStore')\n        this.os = new BufferedStore(transaction, 'OperationStore')\n        this._ds = new BufferedStore(transaction, 'DeleteStore')\n        this.ds = store.dsClone.copyTo(this._ds)\n      }\n    }\n    class OperationStore extends Y.AbstractDatabase {\n      constructor (y, options) {\n        super(y, options)\n        // dsClone is persistent over transactions!\n        // _ds is not\n        this.dsClone = new ClonedStore()\n\n        if (options == null) {\n          options = {}\n        }\n        this.options = options\n        if (options.namespace == null) {\n          if (y.options.connector.room == null) {\n            throw new Error('IndexedDB: expect a string (options.namespace)! (you can also skip this step if your connector has a room property)')\n          } else {\n            options.namespace = y.options.connector.room\n          }\n        }\n        if (options.idbVersion != null) {\n          this.idbVersion = options.idbVersion\n        } else {\n          this.idbVersion = 5\n        }\n        var store = this\n        // initialize database!\n        this.requestTransaction(function * () {\n          store.db = yield window.indexedDB.open(options.namespace, store.idbVersion)\n        })\n        if (options.cleanStart) {\n          delete window.localStorage[JSON.stringify(['Yjs_indexeddb', options.namespace])]\n          this.requestTransaction(function * () {\n            yield this.os.store.clear()\n            yield this._ds.store.clear()\n            yield this.ss.store.clear()\n          })\n        }\n        this.whenUserIdSet(function (userid) {\n          if (window.localStorage[JSON.stringify(['Yjs_indexeddb', options.namespace])] == null) {\n            window.localStorage[JSON.stringify(['Yjs_indexeddb', options.namespace])] = JSON.stringify([userid, 0])\n          }\n        })\n        this.requestTransaction(function * () {\n          // this should be executed after the previous two defined transactions\n          // after we computed the upgrade event (see `yield indexedDB.open(..)`), we can check if userid is still stored on localstorage\n          var uid = window.localStorage[JSON.stringify(['Yjs_indexeddb', options.namespace])]\n          if (uid != null) {\n            store.setUserId(uid)\n            var nextuid = JSON.parse(uid)\n            nextuid[1] = nextuid[1] + 1\n            window.localStorage[JSON.stringify(['Yjs_indexeddb', options.namespace])] = JSON.stringify(nextuid)\n          } else {\n            // wait for a 500ms before setting a random user id\n            window.setTimeout(function () {\n              if (store.userId == null) {\n                // the user is probably offline, so that the connector can't get a user id\n                store.setUserId(generateGuid())\n              }\n            }, 500)\n          }\n          // copy from persistent Store to not persistent StoreClone. (there could already be content in Store)\n          yield* this._ds.iterate(this, null, null, function * (o) {\n            yield* this.ds.put(o, true)\n          })\n        })\n        this.operationAddedNamespace = JSON.stringify(['__YJS__', this.options.namespace])\n        var operationsToAdd = []\n        window.addEventListener('storage', function (event) {\n          if (event.key === store.operationAddedNamespace) {\n            operationsToAdd.push(JSON.parse(event.newValue))\n            if (operationsToAdd.length === 1) {\n              store.requestTransaction(function * () {\n                var _toAdd = []\n                /*\n                There is a special case (see issue y-js/y-indexeddb#2) which we need to handle:\n                Assume a user creates a new type (lets say an Array) and then inserts something in it. Assume both operations are in operationsToAdd.\n                Since a type is initialized first, it already knows about the insertion, and we no longer need to call .operationAdded.\n                If we don't handle this case the type inserts the same operation twice.\n                => So wee need to filter out the operations whose parent is also inclduded in operationsToAdd!\n                */\n                for (var i = 0; i < operationsToAdd.length; i++) {\n                  var op = operationsToAdd[i]\n                  if (op.parent == null || operationsToAdd.every(function (p) {\n                    return !Y.utils.compareIds(p.id, op.parent)\n                  })) {\n                    _toAdd.push(op)\n                  }\n                }\n                operationsToAdd = []\n\n                for (i = 0; i < _toAdd.length; i++) {\n                  yield* this.store.operationAdded(this, _toAdd[i], true)\n                }\n              })\n            }\n          }\n        }, false)\n      }\n      * operationAdded (transaction, op, noAdd) {\n        yield* super.operationAdded(transaction, op)\n        if (!noAdd) {\n          window.localStorage[this.operationAddedNamespace] = JSON.stringify(op)\n        }\n      }\n      transact (makeGen) {\n        var transaction = this.db != null ? new Transaction(this) : null\n        var store = this\n\n        var gen = makeGen.call(transaction)\n        handleTransactions(gen.next())\n\n        function handleTransactions (result) {\n          var request = result.value\n          if (result.done) {\n            makeGen = store.getNextRequest()\n            if (makeGen != null) {\n              if (transaction == null && store.db != null) {\n                transaction = new Transaction(store)\n              }\n              gen = makeGen.call(transaction)\n              handleTransactions(gen.next())\n            } // else no transaction in progress!\n            return\n          }\n          // console.log('new request', request.source != null ? request.source.name : null)\n          if (request.constructor === window.IDBRequest) {\n            request.onsuccess = function () {\n              var res = request.result\n              if (res != null && res.constructor === window.IDBCursorWithValue) {\n                res = res.value\n              }\n              handleTransactions(gen.next(res))\n            }\n            request.onerror = function (err) {\n              gen.throw(err)\n            }\n          } else if (request.constructor === window.IDBCursor) {\n            request.onsuccess = function () {\n              handleTransactions(gen.next(request.result != null ? request.result.value : null))\n            }\n            request.onerror = function (err) {\n              gen.throw(err)\n            }\n          } else if (request.constructor === window.IDBOpenDBRequest) {\n            request.onsuccess = function (event) {\n              var db = event.target.result\n              handleTransactions(gen.next(db))\n            }\n            request.onerror = function () {\n              gen.throw(\"Couldn't open IndexedDB database!\")\n            }\n            request.onupgradeneeded = function (event) {\n              var db = event.target.result\n              delete window.localStorage[JSON.stringify(['Yjs_indexeddb', store.options.namespace])]\n              if (db.objectStoreNames.contains('OperationStore')) {\n                // delete only if exists (we skip the remaining tests)\n                db.deleteObjectStore('OperationStore')\n                db.deleteObjectStore('DeleteStore')\n                db.deleteObjectStore('StateStore')\n              }\n              db.createObjectStore('OperationStore', {keyPath: 'id'})\n              db.createObjectStore('DeleteStore', {keyPath: 'id'})\n              db.createObjectStore('StateStore', {keyPath: 'id'})\n            }\n          } else {\n            gen.throw('You must not yield this type!')\n          }\n        }\n      }\n      // TODO: implement \"free\"..\n      * destroy () {\n        this.db.close()\n        yield window.indexedDB.deleteDatabase(this.options.namespace)\n      }\n    }\n    Y.extend('indexeddb', OperationStore)\n  })\n}\n\nmodule.exports = extend\nif (typeof Y !== 'undefined') {\n  extend(Y)\n}\n",null],"sourceRoot":"/source/"}