{"version":3,"sources":["../yjs/node_modules/browser-pack/_prelude.js","src/IndexedDB.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","generateGuid","Math","random","toString","replace","extend","Y","requestModules","then","createStoreClone","Store","Clone","_Store","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","apply","arguments","buffer","_copyTo","_inherits","_createClass","key","value","store","regeneratorRuntime","mark","put","v","dontCopy","wrap","_context10","prev","next","push","delegateYield","_get","prototype","stop","_delete","id","_context11","delete","flush","_context12","transaction","name","objectStore","find","_context","get","abrupt","sent","_context2","_context3","findWithLowerBound","start","_context4","openCursor","window","IDBKeyRange","lowerBound","findWithUpperBound","end","_context5","upperBound","findNext","_context6","t0","findPrev","_context7","iterate","gen","range","cursorResult","_context8","bound","result","continue","_context9","utils","BufferedStore","createSmallLookupBuffer","ClonedStore","RBTree","Transaction","_Y$Transaction","_this2","db","ss","os","_ds","ds","dsClone","copyTo","OperationStore","_Y$AbstractDatabase","y","options","_this3","namespace","connector","room","idbVersion","requestTransaction","_callee","_context13","indexedDB","open","cleanStart","localStorage","JSON","stringify","_callee2","_context14","clear","whenUserIdSet","userid","_callee4","uid","nextuid","_context16","setUserId","parse","setTimeout","userId","_callee3","_context15","operationAddedNamespace","operationsToAdd","addEventListener","event","newValue","_callee5","_context17","operationAdded","op","noAdd","_context18","makeGen","handleTransactions","request","done","getNextRequest","constructor","IDBRequest","onsuccess","res","IDBCursorWithValue","onerror","err","throw","IDBCursor","IDBOpenDBRequest","target","onupgradeneeded","objectStoreNames","contains","deleteObjectStore","createObjectStore","keyPath","destroy","_context19","close","deleteDatabase","AbstractDatabase"],"mappings":"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","file":"y-indexeddb.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global Y */\n'use strict'\n// Thx to @jed for this script https://gist.github.com/jed/982883\nfunction generateGuid(a){return a?(a^Math.random()*16>>a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,generateGuid)} // eslint-disable-line\n\nfunction extend (Y) {\n  Y.requestModules(['memory']).then(function () {\n    class Store {\n      constructor (transaction, name) {\n        this.store = transaction.objectStore(name)\n      }\n      * find (id) {\n        return yield this.store.get(id)\n      }\n      * put (v) {\n        yield this.store.put(v)\n      }\n      * delete (id) {\n        yield this.store.delete(id)\n      }\n      * findWithLowerBound (start) {\n        return yield this.store.openCursor(window.IDBKeyRange.lowerBound(start))\n      }\n      * findWithUpperBound (end) {\n        return yield this.store.openCursor(window.IDBKeyRange.upperBound(end), 'prev')\n      }\n      * findNext (id) {\n        return yield* this.findWithLowerBound([id[0], id[1] + 1])\n      }\n      * findPrev (id) {\n        return yield* this.findWithUpperBound([id[0], id[1] - 1])\n      }\n      * iterate (t, start, end, gen) {\n        var range = null\n        if (start != null && end != null) {\n          range = window.IDBKeyRange.bound(start, end)\n        } else if (start != null) {\n          range = window.IDBKeyRange.lowerBound(start)\n        } else if (end != null) {\n          range = window.IDBKeyRange.upperBound(end)\n        }\n        var cursorResult\n        if (range != null) {\n          cursorResult = this.store.openCursor(range)\n        } else {\n          cursorResult = this.store.openCursor()\n        }\n        while ((yield cursorResult) != null) {\n          yield* gen.call(t, cursorResult.result.value)\n          cursorResult.result.continue()\n        }\n      }\n      * flush () {}\n    }\n\n    function createStoreClone (Store) {\n      class Clone extends Store {\n        constructor () {\n          super(...arguments)\n          this.buffer = []\n          this._copyTo = null\n        }\n        // copy to this store\n        // it may be neccessary to reset this every time you create a transaction\n        copyTo (store) {\n          this._copyTo = store\n          return this\n        }\n        * put (v, dontCopy) {\n          if (!dontCopy) {\n            this.buffer.push(this._copyTo.put(v))\n          }\n          yield* super.put(v)\n        }\n        * delete (id) {\n          this.buffer.push(this._copyTo.delete(id))\n          yield* super.delete(id)\n        }\n        * flush () {\n          yield* super.flush()\n          for (var i = 0; i < this.buffer.length; i++) {\n            yield* this.buffer[i]\n          }\n          yield* this._copyTo.flush()\n        }\n      }\n      return Clone\n    }\n    Y.utils.createStoreClone = createStoreClone\n\n    var BufferedStore = Y.utils.createSmallLookupBuffer(Store)\n    var ClonedStore = Y.utils.createStoreClone(Y.utils.RBTree)\n\n    class Transaction extends Y.Transaction {\n      constructor (store) {\n        super(store)\n        var transaction = store.db.transaction(['OperationStore', 'StateStore', 'DeleteStore'], 'readwrite')\n        this.store = store\n        this.ss = new BufferedStore(transaction, 'StateStore')\n        this.os = new BufferedStore(transaction, 'OperationStore')\n        this._ds = new BufferedStore(transaction, 'DeleteStore')\n        this.ds = store.dsClone.copyTo(this._ds)\n      }\n    }\n    class OperationStore extends Y.AbstractDatabase {\n      constructor (y, options) {\n        super(y, options)\n        // dsClone is persistent over transactions!\n        // _ds is not\n        this.dsClone = new ClonedStore()\n\n        if (options == null) {\n          options = {}\n        }\n        this.options = options\n        if (options.namespace == null) {\n          if (y.options.connector.room == null) {\n            throw new Error('IndexedDB: expect a string (options.namespace)! (you can also skip this step if your connector has a room property)')\n          } else {\n            options.namespace = y.options.connector.room\n          }\n        }\n        if (options.idbVersion != null) {\n          this.idbVersion = options.idbVersion\n        } else {\n          this.idbVersion = 5\n        }\n        var store = this\n        // initialize database!\n        this.requestTransaction(function * () {\n          store.db = yield window.indexedDB.open(options.namespace, store.idbVersion)\n        })\n        if (options.cleanStart) {\n          delete window.localStorage[JSON.stringify(['Yjs_indexeddb', options.namespace])]\n          this.requestTransaction(function * () {\n            yield this.os.store.clear()\n            yield this._ds.store.clear()\n            yield this.ss.store.clear()\n          })\n        }\n        this.whenUserIdSet(function (userid) {\n          if (window.localStorage[JSON.stringify(['Yjs_indexeddb', options.namespace])] == null) {\n            window.localStorage[JSON.stringify(['Yjs_indexeddb', options.namespace])] = JSON.stringify([userid, 0])\n          }\n        })\n        this.requestTransaction(function * () {\n          // this should be executed after the previous two defined transactions\n          // after we computed the upgrade event (see `yield indexedDB.open(..)`), we can check if userid is still stored on localstorage\n          var uid = window.localStorage[JSON.stringify(['Yjs_indexeddb', options.namespace])]\n          if (uid != null) {\n            store.setUserId(uid)\n            var nextuid = JSON.parse(uid)\n            nextuid[1] = nextuid[1] + 1\n            window.localStorage[JSON.stringify(['Yjs_indexeddb', options.namespace])] = JSON.stringify(nextuid)\n          } else {\n            // wait for a 500ms before setting a random user id\n            window.setTimeout(function () {\n              if (store.userId == null) {\n                // the user is probably offline, so that the connector can't get a user id\n                store.setUserId(generateGuid())\n              }\n            }, 500)\n          }\n          // copy from persistent Store to not persistent StoreClone. (there could already be content in Store)\n          yield* this._ds.iterate(this, null, null, function * (o) {\n            yield* this.ds.put(o, true)\n          })\n        })\n        this.operationAddedNamespace = JSON.stringify(['__YJS__', this.options.namespace])\n        var operationsToAdd = []\n        window.addEventListener('storage', function (event) {\n          if (event.key === store.operationAddedNamespace) {\n            operationsToAdd.push(JSON.parse(event.newValue))\n            if (operationsToAdd.length === 1) {\n              store.requestTransaction(function * () {\n                for (var i = 0; i < operationsToAdd.length; i++) {\n                  yield* this.store.operationAdded(this, operationsToAdd[i], true)\n                }\n                operationsToAdd = []\n              })\n            }\n          }\n        }, false)\n      }\n      * operationAdded (transaction, op, noAdd) {\n        yield* super.operationAdded(transaction, op)\n        if (!noAdd) {\n          window.localStorage[this.operationAddedNamespace] = JSON.stringify(op)\n        }\n      }\n      transact (makeGen) {\n        var transaction = this.db != null ? new Transaction(this) : null\n        var store = this\n\n        var gen = makeGen.call(transaction)\n        handleTransactions(gen.next())\n\n        function handleTransactions (result) {\n          var request = result.value\n          if (result.done) {\n            makeGen = store.getNextRequest()\n            if (makeGen != null) {\n              if (transaction == null && store.db != null) {\n                transaction = new Transaction(store)\n              }\n              gen = makeGen.call(transaction)\n              handleTransactions(gen.next())\n            } // else no transaction in progress!\n            return\n          }\n          // console.log('new request', request.source != null ? request.source.name : null)\n          if (request.constructor === window.IDBRequest) {\n            request.onsuccess = function () {\n              var res = request.result\n              if (res != null && res.constructor === window.IDBCursorWithValue) {\n                res = res.value\n              }\n              handleTransactions(gen.next(res))\n            }\n            request.onerror = function (err) {\n              gen.throw(err)\n            }\n          } else if (request.constructor === window.IDBCursor) {\n            request.onsuccess = function () {\n              handleTransactions(gen.next(request.result != null ? request.result.value : null))\n            }\n            request.onerror = function (err) {\n              gen.throw(err)\n            }\n          } else if (request.constructor === window.IDBOpenDBRequest) {\n            request.onsuccess = function (event) {\n              var db = event.target.result\n              handleTransactions(gen.next(db))\n            }\n            request.onerror = function () {\n              gen.throw(\"Couldn't open IndexedDB database!\")\n            }\n            request.onupgradeneeded = function (event) {\n              var db = event.target.result\n              delete window.localStorage[JSON.stringify(['Yjs_indexeddb', store.options.namespace])]\n              if (db.objectStoreNames.contains('OperationStore')) {\n                // delete only if exists (we skip the remaining tests)\n                db.deleteObjectStore('OperationStore')\n                db.deleteObjectStore('DeleteStore')\n                db.deleteObjectStore('StateStore')\n              }\n              db.createObjectStore('OperationStore', {keyPath: 'id'})\n              db.createObjectStore('DeleteStore', {keyPath: 'id'})\n              db.createObjectStore('StateStore', {keyPath: 'id'})\n            }\n          } else {\n            gen.throw('You must not yield this type!')\n          }\n        }\n      }\n      // TODO: implement \"free\"..\n      * destroy () {\n        this.db.close()\n        yield window.indexedDB.deleteDatabase(this.options.namespace)\n      }\n    }\n    Y.extend('indexeddb', OperationStore)\n  })\n}\n\nmodule.exports = extend\nif (typeof Y !== 'undefined') {\n  extend(Y)\n}\n"],"sourceRoot":"/source/"}