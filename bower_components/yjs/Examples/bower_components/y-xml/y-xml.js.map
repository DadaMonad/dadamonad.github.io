{"version":3,"sources":["../yjs/node_modules/browser-pack/_prelude.js","src/Xml.js","y-xml.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","extend","Y","requestModules","then","YXml","_Y$Array$typeDefiniti","os","_model","_content","attributes","tagname","init","this","_this","getPrototypeOf","dom","_domObserver","_eventListenerHandler","utils","EventListenerHandler","_setDom","_get","event","type","callEventListeners","index","nodes","values","observe","name","_createClass","key","disconnect","destroy","pos","types","_types","Array","isArray","v","isTypeDefinition","push","_this2","token","mutualExclude","records","takeRecords","_domObserverListener","_mutualExclude","mutations","forEach","mutation","attributeName","val","target","getAttribute","get","set","_loop","addedNodes","some","c","window","Text","textContent","remove","nextSibling","findIndex","Element","Xml","insert","content","removedNodes","MutationObserver","childList","_tryInsertDom","succ","insertBefore","setAttribute","removeAttribute","valId","id","newNode","getDom","compareIds","textNode","_this3","__yxml","attr","map","childNodes","_bindToDom","_this4","document","createElement","keysPrimitives","hasOwnProperty","getType","appendChild","addEventListener","removeEventListener","regeneratorRuntime","mark","_changed","_args","arguments","wrap","_context","prev","next","delegateYield","typeDefinition","apply","stop","CustomTypeDefinition","class","struct","parseArguments","arg","tagName","initType","YXmlInitializer","model","args","properties","typestruct","_context2","Struct","List","op","opContent","Map","t2","requires","info","setOperation","t4","abrupt","createType","defineProperties","props","descriptor","defineProperty","protoProps","staticProps","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getter"],"mappings":"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","file":"y-xml.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global Y, MutationObserver */\n'use strict'\n\nfunction extend (Y) {\n  Y.requestModules(['Array', 'Map']).then(function () {\n    class YXml extends Y.Array.typeDefinition['class'] {\n      constructor (os, _model, _content, attributes, tagname, init) {\n        super(os, _model, _content)\n        this.attributes = attributes\n        this.dom = null\n        this._domObserver = null\n        this._eventListenerHandler = new Y.utils.EventListenerHandler()\n        this.tagname = tagname\n        if (init != null && init.dom != null) {\n          this._setDom(init.dom)\n        }\n        super.observe(event => {\n          if (event.type === 'insert') {\n            this._eventListenerHandler.callEventListeners({\n              type: 'childInserted',\n              index: event.index,\n              nodes: event.values\n            })\n          } else if (event.type === 'delete') {\n            this._eventListenerHandler.callEventListeners({\n              type: 'childRemoved',\n              index: event.index,\n              _content: event._content,\n              values: event.values\n            })\n          }\n        })\n        attributes.observe(event => {\n          if (event.type === 'update' || event.type === 'add') {\n            this._eventListenerHandler.callEventListeners({\n              type: 'attributeChanged',\n              name: event.name,\n              value: event.value\n            })\n          } else if (event.type === 'delete') {\n            this._eventListenerHandler.callEventListeners({\n              type: 'attributeRemoved',\n              name: event.name\n            })\n          }\n        })\n      }\n      _destroy () {\n        if (this._domObserver != null) {\n          this._domObserver.disconnect()\n        }\n        this._eventListenerHandler.destroy()\n        this._eventListenerHandler = null\n        super._destroy()\n      }\n      insert (pos, types) {\n        var _types = []\n        if (!Array.isArray(types)) {\n          throw new Error('Expected an Array of content!')\n        }\n        for (var i = 0; i < types.length; i++) {\n          var v = types[i]\n          var t = Y.utils.isTypeDefinition(v)\n          if (!(v != null && (\n                       typeof v === 'string' ||\n                       (t && t[0].class === YXml)\n             ))) {\n            throw new Error('Expected Y.Xml type or String!')\n          } else if (typeof v === 'string' && v.length === 0) {\n            continue // if empty string\n          }\n          _types.push(v)\n        }\n        super.insert(pos, types)\n      }\n      // binds to a dom element\n      // Only call if dom and YXml are isomorph\n      _bindToDom (dom) {\n        // this function makes sure that either the\n        // dom event is executed, or the yjs observer is executed\n        var token = true\n        var mutualExclude = f => {\n          // take and process current records\n          var records = this._domObserver.takeRecords()\n          if (records.length > 0) {\n            this._domObserverListener(records)\n          }\n          if (token) {\n            token = false\n            try {\n              f()\n            } catch (e) {\n              // discard created records\n              this._domObserver.takeRecords()\n              token = true\n              throw e\n            }\n            this._domObserver.takeRecords()\n            token = true\n          }\n        }\n        this._mutualExclude = mutualExclude\n        this._domObserverListener = mutations => {\n          mutualExclude(() => {\n            mutations.forEach(mutation => {\n              if (mutation.type === 'attributes') {\n                var name = mutation.attributeName\n                var val = mutation.target.getAttribute(mutation.attributeName)\n                if (this.attributes.get(name) !== val) {\n                  this.attributes.set(name, val)\n                }\n              } else if (mutation.type === 'childList') {\n                for (let i = 0; i < mutation.addedNodes.length; i++) {\n                  let n = mutation.addedNodes[i]\n                  if (this._content.some(function (c) { return c.dom === n })) {\n                    // check if it already exists (since this method is called asynchronously)\n                    continue\n                  }\n                  if (n instanceof window.Text && n.textContent === '') {\n                    // check if textnode and empty content (sometime happens.. )\n                    //   TODO - you could also check if the inserted node actually exists in the\n                    //          dom (in order to cover more potential cases)\n                    n.remove()\n                    continue\n                  }\n                  // compute position\n                  // special case, n.nextSibling is not yet inserted. So we find the next inserted element!\n                  var pos = -1\n                  var nextSibling = n.nextSibling\n                  while (pos < 0) {\n                    if (nextSibling == null) {\n                      pos = this._content.length\n                    } else {\n                      pos = this._content.findIndex(function (c) { return c.dom === nextSibling })\n                      nextSibling = nextSibling.nextSibling\n                    }\n                  }\n                  var c\n                  if (n instanceof window.Text) {\n                    c = n.textContent\n                  } else if (n instanceof window.Element) {\n                    c = Y.Xml(n)\n                  } else {\n                    throw new Error('Unsupported XML Element found. Synchronization will no longer work!')\n                  }\n                  this.insert(pos, [c])\n                  var content = this._content[pos]\n                  content.dom = n\n                }\n                Array.prototype.forEach.call(mutation.removedNodes, n => {\n                  var pos = this._content.findIndex(function (c) {\n                    return c.dom === n\n                  })\n                  if (pos >= 0) {\n                    this.delete(pos)\n                  } else {\n                    throw new Error('An unexpected condition occured (deleted node does not exist in the model)!')\n                  }\n                })\n              }\n            })\n          })\n        }\n        this._domObserver = new MutationObserver(this._domObserverListener)\n        this._domObserver.observe(dom, { attributes: true, childList: true })\n        // In order to insert a new node, successor needs to be inserted\n        // when c.dom can be inserted, try to insert the predecessors too\n        var _tryInsertDom = (pos) => {\n          var c = this._content[pos]\n          var succ\n          if (pos + 1 < this._content.length) {\n            succ = this._content[pos + 1]\n            if (succ.dom == null) throw new Error('Unexpected behavior') // shouldn't happen anymore!\n          } else {\n            // pseudo successor\n            succ = {\n              dom: null\n            }\n          }\n          dom.insertBefore(c.dom, succ.dom)\n        }\n        this._tryInsertDom = _tryInsertDom\n        this.observe(event => {\n          mutualExclude(() => {\n            if (event.type === 'attributeChanged') {\n              dom.setAttribute(event.name, event.value)\n            } else if (event.type === 'attributeRemoved') {\n              dom.removeAttribute(event.name)\n            } else if (event.type === 'childInserted') {\n              if (event.nodes.length === 1 && event.nodes[0] instanceof YXml) {\n                // a new xml node was inserted.\n                // TODO: consider the case that nodes contains mixed text & types (currently not implemented in yjs)\n                var valId = this._content[event.index].id\n                if (event.nodes.length > 1) { throw new Error('This case is not handled, you\\'ll run into consistency issues. Contact the developer') }\n                var newNode = event.nodes[0].getDom()\n                // This is called async. So we have to compute the position again\n                // also mutual excluse this\n                var pos\n                if (event.index < this._content.length && Y.utils.compareIds(this._content[event.index].id, valId)) {\n                  pos = event.index\n                } else {\n                  pos = this._content.findIndex(function (c) {\n                    return Y.utils.compareIds(c.id, valId)\n                  })\n                }\n                if (pos >= 0) {\n                  this._content[pos].dom = newNode\n                  _tryInsertDom(pos)\n                }\n              } else {\n                for (var i = event.nodes.length - 1; i >= 0; i--) {\n                  var n = event.nodes[i]\n                  var textNode = new window.Text(n)\n                  this._content[event.index + i].dom = textNode\n                  _tryInsertDom(event.index + i)\n                }\n              }\n            } else if (event.type === 'childRemoved') {\n              event._content.forEach(function (c) {\n                if (c.dom != null) {\n                  c.dom.remove()\n                }\n              })\n            }\n          })\n        })\n        return dom\n      }\n      _setDom (dom) {\n        if (this.dom != null) {\n          throw new Error('Only call this method if you know what you are doing ;)')\n        } else if (dom.__yxml != null) { // TODO do i need to check this? - no.. but for dev purps..\n          throw new Error('Already bound to an YXml type')\n        } else {\n          dom.__yxml = this._model\n          // tag is already set in constructor\n          // set attributes\n          for (var i = 0; i < dom.attributes.length; i++) {\n            var attr = dom.attributes[i]\n            this.attributes.set(attr.name, attr.value)\n          }\n          this.insert(0, Array.prototype.map.call(dom.childNodes, (c, i) => {\n            if (c instanceof window.Element) {\n              return Y.Xml(c)\n            } else if (c instanceof window.Text) {\n              return c.textContent\n            } else {\n              throw new Error('Unknown node type!')\n            }\n          }))\n          Array.prototype.forEach.call(dom.childNodes, (dom, i) => {\n            var c = this._content[i]\n            c.dom = dom\n          })\n          this.dom = this._bindToDom(dom)\n          return this.dom\n        }\n      }\n      getDom () {\n        if (this.dom == null) {\n          var dom = document.createElement(this.tagname)\n          dom.__yxml = this\n          this.attributes.keysPrimitives().forEach(key => {\n            dom.setAttribute(key, this.attributes.get(key))\n          })\n          for (var i = 0; i < this._content.length; i++) {\n            let c = this._content[i]\n            if (c.hasOwnProperty('val')) {\n              c.dom = new window.Text(c.val)\n            } else {\n              c.dom = this.os.getType(c.type).getDom()\n            }\n            dom.appendChild(c.dom)\n          }\n          this.dom = this._bindToDom(dom)\n        }\n        return this.dom\n      }\n      observe (f) {\n        this._eventListenerHandler.addEventListener(f)\n      }\n      unobserve (f) {\n        this._eventListenerHandler.removeEventListener(f)\n      }\n      * _changed () {\n        if (this._domObserver != null) {\n          this._domObserverListener(this._domObserver.takeRecords())\n        }\n        yield* Y.Array.typeDefinition['class'].prototype._changed.apply(this, arguments)\n      }\n    }\n    Y.extend('Xml', new Y.utils.CustomTypeDefinition({\n      name: 'Xml',\n      class: YXml,\n      struct: 'List',\n      parseArguments: function (arg) {\n        if (typeof arg === 'string') {\n          return [this, {\n            tagname: arg\n          }]\n        } else if (arg instanceof window.Element) {\n          return [this, {\n            tagname: arg.tagName,\n            dom: arg\n          }]\n        } else {\n          throw new Error('Y.Xml requires an argument which is a string!')\n        }\n      },\n      initType: function * YXmlInitializer (os, model, args) {\n        var _content = []\n        var _types = []\n        yield* Y.Struct.List.map.call(this, model, function (op) {\n          if (op.hasOwnProperty('opContent')) {\n            _content.push({\n              id: op.id,\n              type: op.opContent\n            })\n            _types.push(op.opContent)\n          } else {\n            op.content.forEach(function (c, i) {\n              _content.push({\n                id: [op.id[0], op.id[1] + i],\n                val: op.content[i]\n              })\n            })\n          }\n        })\n        for (var i = 0; i < _types.length; i++) {\n          yield* os.initType.call(this, _types[i])\n        }\n        // if this type is defined in y.share.*, initType is called instead of createType!\n        // So we have to initialize it properly\n        var properties\n        if (model.id[0] === '_') {\n          var typestruct = Y.Map.typeDefinition.struct\n          var id = ['_', typestruct + '_' + 'Map_' + model.id[1]]\n          properties = yield* os.initType.call(this, id)\n\n          model.requires = [properties._model]\n          model.info = {\n            tagname: args.tagname\n          }\n          yield* this.setOperation(model)\n        } else {\n          properties = yield* os.initType.call(this, model.requires[0]) // get the only required op\n        }\n        return new YXml(os, model.id, _content, properties, model.info.tagname, model.info)\n      },\n      createType: function YXmlCreator (os, model, args) {\n        var id = null\n        if (model.id[0] === '_') {\n          var typestruct = Y.Map.typeDefinition.struct\n          id = ['_', typestruct + '_' + 'Map_' + model.id[1]]\n        }\n        var properties = os.createType(Y.Map(), id)\n        model.info = {\n          tagname: args.tagname\n        }\n        model.requires = [properties._model] // XML requires that 'properties' exists\n        return new YXml(os, model.id, [], properties, model.info.tagname, args)\n      }\n    }))\n  })\n}\n\nmodule.exports = extend\nif (typeof Y !== 'undefined') {\n  extend(Y)\n}\n",null],"sourceRoot":"/source/"}