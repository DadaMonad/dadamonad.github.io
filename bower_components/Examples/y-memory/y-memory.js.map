{"version":3,"sources":["../yjs/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/Memory.js","src/RedBlackTree.js"],"names":[],"mappings":"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","file":"y-memory.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global Y */\n'use strict'\n\nfunction extend (Y) {\n  require('./RedBlackTree.js')(Y)\n  class Transaction extends Y.Transaction {\n    constructor (store) {\n      super(store)\n      this.store = store\n      this.ss = store.ss\n      this.os = store.os\n      this.ds = store.ds\n    }\n  }\n  class Database extends Y.AbstractDatabase {\n    constructor (y, opts) {\n      super(y, opts)\n      this.os = new Y.utils.RBTree()\n      this.ds = new Y.utils.RBTree()\n      this.ss = new Y.utils.RBTree()\n    }\n    logTable () {\n      var self = this\n      self.requestTransaction(function * () {\n        console.log('User: ', this.store.y.connector.userId, \"==============================\") // eslint-disable-line\n        console.log(\"State Set (SS):\", yield* this.getStateSet()) // eslint-disable-line\n        console.log(\"Operation Store (OS):\") // eslint-disable-line\n        yield* this.os.logTable() // eslint-disable-line\n        console.log(\"Deletion Store (DS):\") //eslint-disable-line\n        yield* this.ds.logTable() // eslint-disable-line\n        if (this.store.gc1.length > 0 || this.store.gc2.length > 0) {\n          console.warn('GC1|2 not empty!', this.store.gc1, this.store.gc2)\n        }\n        if (JSON.stringify(this.store.listenersById) !== '{}') {\n          console.warn('listenersById not empty!')\n        }\n        if (JSON.stringify(this.store.listenersByIdExecuteNow) !== '[]') {\n          console.warn('listenersByIdExecuteNow not empty!')\n        }\n        if (this.store.transactionInProgress) {\n          console.warn('Transaction still in progress!')\n        }\n      }, true)\n    }\n    transact (makeGen) {\n      var t = new Transaction(this)\n      while (makeGen !== null) {\n        var gen = makeGen.call(t)\n        var res = gen.next()\n        while (!res.done) {\n          res = gen.next(res.value)\n        }\n        makeGen = this.getNextRequest()\n      }\n    }\n    * destroy () {\n      super.destroy()\n      delete this.os\n      delete this.ss\n      delete this.ds\n    }\n  }\n  Y.extend('memory', Database)\n}\n\nmodule.exports = extend\nif (typeof Y !== 'undefined') {\n  extend(Y)\n}\n","'use strict'\n\n/*\n  This file contains a not so fancy implemantion of a Red Black Tree.\n*/\nmodule.exports = function (Y) {\n  class N {\n    // A created node is always red!\n    constructor (val) {\n      this.val = val\n      this.color = true\n      this._left = null\n      this._right = null\n      this._parent = null\n      if (val.id === null) {\n        throw new Error('You must define id!')\n      }\n    }\n    isRed () { return this.color }\n    isBlack () { return !this.color }\n    redden () { this.color = true; return this }\n    blacken () { this.color = false; return this }\n    get grandparent () {\n      return this.parent.parent\n    }\n    get parent () {\n      return this._parent\n    }\n    get sibling () {\n      return (this === this.parent.left)\n        ? this.parent.right : this.parent.left\n    }\n    get left () {\n      return this._left\n    }\n    get right () {\n      return this._right\n    }\n    set left (n) {\n      if (n !== null) {\n        n._parent = this\n      }\n      this._left = n\n    }\n    set right (n) {\n      if (n !== null) {\n        n._parent = this\n      }\n      this._right = n\n    }\n    rotateLeft (tree) {\n      var parent = this.parent\n      var newParent = this.right\n      var newRight = this.right.left\n      newParent.left = this\n      this.right = newRight\n      if (parent === null) {\n        tree.root = newParent\n        newParent._parent = null\n      } else if (parent.left === this) {\n        parent.left = newParent\n      } else if (parent.right === this) {\n        parent.right = newParent\n      } else {\n        throw new Error('The elements are wrongly connected!')\n      }\n    }\n    next () {\n      if (this.right !== null) {\n        // search the most left node in the right tree\n        var o = this.right\n        while (o.left !== null) {\n          o = o.left\n        }\n        return o\n      } else {\n        var p = this\n        while (p.parent !== null && p !== p.parent.left) {\n          p = p.parent\n        }\n        return p.parent\n      }\n    }\n    prev () {\n      if (this.left !== null) {\n        // search the most right node in the left tree\n        var o = this.left\n        while (o.right !== null) {\n          o = o.right\n        }\n        return o\n      } else {\n        var p = this\n        while (p.parent !== null && p !== p.parent.right) {\n          p = p.parent\n        }\n        return p.parent\n      }\n    }\n    rotateRight (tree) {\n      var parent = this.parent\n      var newParent = this.left\n      var newLeft = this.left.right\n      newParent.right = this\n      this.left = newLeft\n      if (parent === null) {\n        tree.root = newParent\n        newParent._parent = null\n      } else if (parent.left === this) {\n        parent.left = newParent\n      } else if (parent.right === this) {\n        parent.right = newParent\n      } else {\n        throw new Error('The elements are wrongly connected!')\n      }\n    }\n    getUncle () {\n      // we can assume that grandparent exists when this is called!\n      if (this.parent === this.parent.parent.left) {\n        return this.parent.parent.right\n      } else {\n        return this.parent.parent.left\n      }\n    }\n  }\n\n  class RBTree {\n    constructor () {\n      this.root = null\n      this.length = 0\n    }\n    * findNext (id) {\n      return yield* this.findWithLowerBound([id[0], id[1] + 1])\n    }\n    * findPrev (id) {\n      return yield* this.findWithUpperBound([id[0], id[1] - 1])\n    }\n    findNodeWithLowerBound (from) {\n      if (from === void 0) {\n        throw new Error('You must define from!')\n      }\n      var o = this.root\n      if (o === null) {\n        return null\n      } else {\n        while (true) {\n          if ((from === null || Y.utils.smaller(from, o.val.id)) && o.left !== null) {\n            // o is included in the bound\n            // try to find an element that is closer to the bound\n            o = o.left\n          } else if (from !== null && Y.utils.smaller(o.val.id, from)) {\n            // o is not within the bound, maybe one of the right elements is..\n            if (o.right !== null) {\n              o = o.right\n            } else {\n              // there is no right element. Search for the next bigger element,\n              // this should be within the bounds\n              return o.next()\n            }\n          } else {\n            return o\n          }\n        }\n      }\n    }\n    findNodeWithUpperBound (to) {\n      if (to === void 0) {\n        throw new Error('You must define from!')\n      }\n      var o = this.root\n      if (o === null) {\n        return null\n      } else {\n        while (true) {\n          if ((to === null || Y.utils.smaller(o.val.id, to)) && o.right !== null) {\n            // o is included in the bound\n            // try to find an element that is closer to the bound\n            o = o.right\n          } else if (to !== null && Y.utils.smaller(to, o.val.id)) {\n            // o is not within the bound, maybe one of the left elements is..\n            if (o.left !== null) {\n              o = o.left\n            } else {\n              // there is no left element. Search for the prev smaller element,\n              // this should be within the bounds\n              return o.prev()\n            }\n          } else {\n            return o\n          }\n        }\n      }\n    }\n    * findWithLowerBound (from) {\n      var n = this.findNodeWithLowerBound(from)\n      return n == null ? null : n.val\n    }\n    * findWithUpperBound (to) {\n      var n = this.findNodeWithUpperBound(to)\n      return n == null ? null : n.val\n    }\n    * iterate (t, from, to, f) {\n      var o = this.findNodeWithLowerBound(from)\n      while (o !== null && (to === null || Y.utils.smaller(o.val.id, to) || Y.utils.compareIds(o.val.id, to))) {\n        yield* f.call(t, o.val)\n        o = o.next()\n      }\n      return true\n    }\n    * logTable (from, to, filter) {\n      if (filter == null) {\n        filter = function () {\n          return true\n        }\n      }\n      if (from == null) { from = null }\n      if (to == null) { to = null }\n      var os = []\n      yield* this.iterate(this, from, to, function * (o) {\n        if (filter(o)) {\n          var o_ = {}\n          for (var key in o) {\n            if (typeof o[key] === 'object') {\n              o_[key] = JSON.stringify(o[key])\n            } else {\n              o_[key] = o[key]\n            }\n          }\n          os.push(o_)\n        }\n      })\n      if (console.table != null) {\n        console.table(os)\n      }\n    }\n    * find (id) {\n      var n\n      return (n = this.findNode(id)) ? n.val : null\n    }\n    findNode (id) {\n      if (id == null || id.constructor !== Array) {\n        throw new Error('Expect id to be an array!')\n      }\n      var o = this.root\n      if (o === null) {\n        return false\n      } else {\n        while (true) {\n          if (o === null) {\n            return false\n          }\n          if (Y.utils.smaller(id, o.val.id)) {\n            o = o.left\n          } else if (Y.utils.smaller(o.val.id, id)) {\n            o = o.right\n          } else {\n            return o\n          }\n        }\n      }\n    }\n    * delete (id) {\n      if (id == null || id.constructor !== Array) {\n        throw new Error('id is expected to be an Array!')\n      }\n      var d = this.findNode(id)\n      if (d == null) {\n        throw new Error('Element does not exist!')\n      }\n      this.length--\n      if (d.left !== null && d.right !== null) {\n        // switch d with the greates element in the left subtree.\n        // o should have at most one child.\n        var o = d.left\n        // find\n        while (o.right !== null) {\n          o = o.right\n        }\n        // switch\n        d.val = o.val\n        d = o\n      }\n      // d has at most one child\n      // let n be the node that replaces d\n      var isFakeChild\n      var child = d.left || d.right\n      if (child === null) {\n        isFakeChild = true\n        child = new N({id: 0})\n        child.blacken()\n        d.right = child\n      } else {\n        isFakeChild = false\n      }\n\n      if (d.parent === null) {\n        if (!isFakeChild) {\n          this.root = child\n          child.blacken()\n          child._parent = null\n        } else {\n          this.root = null\n        }\n        return\n      } else if (d.parent.left === d) {\n        d.parent.left = child\n      } else if (d.parent.right === d) {\n        d.parent.right = child\n      } else {\n        throw new Error('Impossible!')\n      }\n      if (d.isBlack()) {\n        if (child.isRed()) {\n          child.blacken()\n        } else {\n          this._fixDelete(child)\n        }\n      }\n      this.root.blacken()\n      if (isFakeChild) {\n        if (child.parent.left === child) {\n          child.parent.left = null\n        } else if (child.parent.right === child) {\n          child.parent.right = null\n        } else {\n          throw new Error('Impossible #3')\n        }\n      }\n    }\n    _fixDelete (n) {\n      function isBlack (node) {\n        return node !== null ? node.isBlack() : true\n      }\n      function isRed (node) {\n        return node !== null ? node.isRed() : false\n      }\n      if (n.parent === null) {\n        // this can only be called after the first iteration of fixDelete.\n        return\n      }\n      // d was already replaced by the child\n      // d is not the root\n      // d and child are black\n      var sibling = n.sibling\n      if (isRed(sibling)) {\n        // make sibling the grandfather\n        n.parent.redden()\n        sibling.blacken()\n        if (n === n.parent.left) {\n          n.parent.rotateLeft(this)\n        } else if (n === n.parent.right) {\n          n.parent.rotateRight(this)\n        } else {\n          throw new Error('Impossible #2')\n        }\n        sibling = n.sibling\n      }\n      // parent, sibling, and children of n are black\n      if (n.parent.isBlack() &&\n        sibling.isBlack() &&\n        isBlack(sibling.left) &&\n        isBlack(sibling.right)\n      ) {\n        sibling.redden()\n        this._fixDelete(n.parent)\n      } else if (n.parent.isRed() &&\n        sibling.isBlack() &&\n        isBlack(sibling.left) &&\n        isBlack(sibling.right)\n      ) {\n        sibling.redden()\n        n.parent.blacken()\n      } else {\n        if (n === n.parent.left &&\n          sibling.isBlack() &&\n          isRed(sibling.left) &&\n          isBlack(sibling.right)\n        ) {\n          sibling.redden()\n          sibling.left.blacken()\n          sibling.rotateRight(this)\n          sibling = n.sibling\n        } else if (n === n.parent.right &&\n          sibling.isBlack() &&\n          isRed(sibling.right) &&\n          isBlack(sibling.left)\n        ) {\n          sibling.redden()\n          sibling.right.blacken()\n          sibling.rotateLeft(this)\n          sibling = n.sibling\n        }\n        sibling.color = n.parent.color\n        n.parent.blacken()\n        if (n === n.parent.left) {\n          sibling.right.blacken()\n          n.parent.rotateLeft(this)\n        } else {\n          sibling.left.blacken()\n          n.parent.rotateRight(this)\n        }\n      }\n    }\n    * put (v) {\n      if (v == null || v.id == null || v.id.constructor !== Array) {\n        throw new Error('v is expected to have an id property which is an Array!')\n      }\n      var node = new N(v)\n      if (this.root !== null) {\n        var p = this.root // p abbrev. parent\n        while (true) {\n          if (Y.utils.smaller(node.val.id, p.val.id)) {\n            if (p.left === null) {\n              p.left = node\n              break\n            } else {\n              p = p.left\n            }\n          } else if (Y.utils.smaller(p.val.id, node.val.id)) {\n            if (p.right === null) {\n              p.right = node\n              break\n            } else {\n              p = p.right\n            }\n          } else {\n            p.val = node.val\n            return p\n          }\n        }\n        this._fixInsert(node)\n      } else {\n        this.root = node\n      }\n      this.length++\n      this.root.blacken()\n      return node\n    }\n    _fixInsert (n) {\n      if (n.parent === null) {\n        n.blacken()\n        return\n      } else if (n.parent.isBlack()) {\n        return\n      }\n      var uncle = n.getUncle()\n      if (uncle !== null && uncle.isRed()) {\n        // Note: parent: red, uncle: red\n        n.parent.blacken()\n        uncle.blacken()\n        n.grandparent.redden()\n        this._fixInsert(n.grandparent)\n      } else {\n        // Note: parent: red, uncle: black or null\n        // Now we transform the tree in such a way that\n        // either of these holds:\n        //   1) grandparent.left.isRed\n        //     and grandparent.left.left.isRed\n        //   2) grandparent.right.isRed\n        //     and grandparent.right.right.isRed\n        if (n === n.parent.right && n.parent === n.grandparent.left) {\n          n.parent.rotateLeft(this)\n          // Since we rotated and want to use the previous\n          // cases, we need to set n in such a way that\n          // n.parent.isRed again\n          n = n.left\n        } else if (n === n.parent.left && n.parent === n.grandparent.right) {\n          n.parent.rotateRight(this)\n          // see above\n          n = n.right\n        }\n        // Case 1) or 2) hold from here on.\n        // Now traverse grandparent, make parent a black node\n        // on the highest level which holds two red nodes.\n        n.parent.blacken()\n        n.grandparent.redden()\n        if (n === n.parent.left) {\n          // Case 1\n          n.grandparent.rotateRight(this)\n        } else {\n          // Case 2\n          n.grandparent.rotateLeft(this)\n        }\n      }\n    }\n  }\n\n  Y.utils.RBTree = RBTree\n}\n"]}